#ifndef INCLUDED_PROTOCOL_2GDEF_H
#define INCLUDED_PROTOCOL_2GDEF_H

#include "StandardDef.h"

//**************************************************
//	Higher-Level MCU <--> Ground Control Station  communication definition
//**************************************************


// パケット識別ID
enum PACKETID 
{
	PACKETID_COMMAND           = 0x00, // UAV ⇔ PC
	PACKETID_REPLY             = 0x01, // UAV ⇔ PC
	PACKETID_INPUTDATA         = 0x02, // UAV → GCS
	PACKETID_INPUTDATA_6R      = 0x03, // UAV → GCS
	PACKETID_INPUTDATA_12R     = 0x04, // UAV → GCS
	PACKETID_INPUTDATA_MIN     = 0x05, // UAV → GCS
	PACKETID_IMU_PS_DATA       = 0x06, // UAV → GCS
	PACKETID_MAGDATA           = 0x07, // UAV → GCS
	PACKETID_GPSDATA           = 0x08, // UAV → GCS
	PACKETID_GPSINFO           = 0x09, // UAV → GCS
	PACKETID_NAVDATA           = 0x0A, // UAV → GCS
	PACKETID_NAVDATA_EX        = 0x0B, // UAV → GCS
	PACKETID_REFDATA           = 0x0C, // UAV → GCS
	PACKETID_WAYPOINTDATA      = 0x0D, // UAV ⇔ GCS(Ver3.4.0以降 UAV←GCS)
	PACKETID_HOMEDATA          = 0x0E, // UAV → GCS
	PACKETID_SYSTEMDATA        = 0x0F, // UAV → GCS
	PACKETID_ERRORDATA         = 0x10, // UAV → GCS
	PACKETID_ACTIONPOINT       = 0x11, // UAV → GCS
	PACKETID_ACTIONPOINT_ACK   = 0x12, // UAV ← GCS
	PACKETID_MULTIWAYPOINTDATA = 0x13, // UAV ← GCS
	PACKETID_MULTIWAYPOINT_ACK = 0x14, // UAV → GCS
	PACKETID_FIRMWARE_INFO     = 0x15, // UAV → GCS
	PACKETID_PROPODATA         = 0x16, // UAV → GCS
	PACKETID_EEPROMDATA        = 0x17, // UAV ⇔ GCS
	PACKETID_EEPROM_COMMAND    = 0x18, // UAV ← GCS
	PACKETID_TRANS_MODE_CHANGE_REQ             = 0x19, // UAV ← GCS データ転送モード変更要求
	PACKETID_TRANS_MODE_CHANGE_RES             = 0x1A, // UAV → GCS データ転送モード変更応答
	PACKETID_SD_FILE_SEND_START_REQ            = 0x1B, // UAV ← GCS データ転送開始要求
	PACKETID_SD_FILE_SEND_START_NOTIFY         = 0x1C, // UAV → GCS データ転送開始通知
	PACKETID_SD_FILE_SEND_REQ                  = 0x1D, // UAV ⇔ GCS 汎用要求
	PACKETID_SD_FILE_SEND_NOTIFY               = 0x1E, // UAV ⇔ GCS 汎用通知
	PACKETID_SD_FILE_USER_DATA                 = 0x1F, // UAV ⇔ GCS ユーザーデータ
	PACKETID_SD_FILE_RESEND_REQ                = 0x20, // UAV ⇔ GCS データ再送要求
	PACKETID_SD_FILE_SEND_STOP_REQ             = 0x21, // UAV ← GCS データ転送停止要求
	PACKETID_SD_FILE_SEND_STOP_NOTIFY          = 0x22, // UAV → GCS データ転送停止通知
	PACKETID_LIFEMANAGEMENT_PARTIAL_RESET_REQ  = 0x23, // UAV ← GCS 寿命管理情報パーシャルリセット要求
	PACKETID_SD_FILE_SEND_UPDATE_FILE_LIST_REQ = 0x24, // UAV ← GCS ファイルリスト更新要求
	PACKETID_SD_FILE_SEND_UPDATE_FILE_LIST_RES = 0x25, // UAV ← GCS ファイルリスト更新応答
	PACKETID_SD_FILE_LIST_DATA                 = 0x26, // ファイルサイズ(4)、ファイル(フォルダ)情報(20)
	PACKETID_WAYPOINTDATA2					   = 0x29, // UAV → GCS (Ver3.4.0以降)
	PACKETID_GENELALPURPOSEDATA = 0x2A,	// UAV → GCS
	PACKETID_DEBUGDATA_H		= 0xFE, // UAV → GCS
	PACKETID_DEBUGDATA_L		= 0xFF, // UAV → GCS
};

// パケットの大きさ
enum PACKETSIZE 
{
	PACKETSIZE_CONSTANT          = 5,
	PACKETSIZE_COMMAND           = PACKETSIZE_CONSTANT + 6,
	PACKETSIZE_REPLY             = PACKETSIZE_CONSTANT + 6,
	PACKETSIZE_INPUTDATA         = PACKETSIZE_CONSTANT + 16,
	PACKETSIZE_INPUTDATA_6R      = PACKETSIZE_CONSTANT + 28,
	PACKETSIZE_INPUTDATA_12R     = PACKETSIZE_CONSTANT + 40,
	PACKETSIZE_INPUTDATA_MIN     = PACKETSIZE_CONSTANT + 8,
	PACKETSIZE_IMU_PS_DATA       = PACKETSIZE_CONSTANT + 23,
	PACKETSIZE_MAGDATA           = PACKETSIZE_CONSTANT + 6,
	PACKETSIZE_GPSDATA           = PACKETSIZE_CONSTANT + 19,
	PACKETSIZE_GPSINFO           = PACKETSIZE_CONSTANT + 9,
	PACKETSIZE_NAVDATA           = PACKETSIZE_CONSTANT + 21,
	PACKETSIZE_NAVDATA_EX        = PACKETSIZE_CONSTANT + 25,
	PACKETSIZE_REFDATA           = PACKETSIZE_CONSTANT + 15,
	PACKETSIZE_WAYPOINTDATA      = PACKETSIZE_CONSTANT + 16,
	PACKETSIZE_HOMEDATA          = PACKETSIZE_CONSTANT + 15,
	PACKETSIZE_SYSTEMDATA        = PACKETSIZE_CONSTANT + 23,
	PACKETSIZE_ERRORDATA         = PACKETSIZE_CONSTANT + 10,
	PACKETSIZE_ACTIONPOINT       = PACKETSIZE_CONSTANT + 26,
	PACKETSIZE_ACTIONPOINT_ACK   = PACKETSIZE_CONSTANT + 3,
	PACKETSIZE_MULTIWAYPOINTDATA = PACKETSIZE_CONSTANT + 30,
	PACKETSIZE_MULTIWAYPOINT_ACK = PACKETSIZE_CONSTANT + 30,
	PACKETSIZE_FIRMWARE_INFO     = PACKETSIZE_CONSTANT + 18,
	PACKETSIZE_PROPODATA         = PACKETSIZE_CONSTANT + 21,
	PACKETSIZE_EEPROMDATA        = PACKETSIZE_CONSTANT + 32,
	PACKETSIZE_EEPROM_COMMAND    = PACKETSIZE_CONSTANT + 4,
	PACKETSIZE_TRANS_MODE_CHANGE_REQ     = PACKETSIZE_CONSTANT + 1,         // モード(1)
	PACKETSIZE_TRANS_MODE_CHANGE_RES     = PACKETSIZE_TRANS_MODE_CHANGE_REQ,// 結果(1)
// 201506xx TCS.Y.Nakamura ADD_S [ファイル転送機能拡張対応]
	PACKETSIZE_SD_FILE_SEND_START_REQ    = PACKETSIZE_CONSTANT + 1+4+11+20,    // RW(1)、有効データ長(4)、フォルダ名(11)、ファイル情報(20)
	PACKETSIZE_SD_FILE_SEND_START_NOTIFY = PACKETSIZE_CONSTANT + 1+1+4+20,  // RW(1)、結果(1)、有効データ長(4)、ファイル情報(20)
// 201506xx TCS.Y.Nakamura ADD_E
	PACKETSIZE_SD_FILE_SEND_REQ          = PACKETSIZE_CONSTANT + 1+2+4,     // 種別(1)、ブロック番号(2)、CRC32(4)
	PACKETSIZE_SD_FILE_SEND_NOTIFY       = PACKETSIZE_CONSTANT + 1+1+2,     // 種別(1)、結果(1)、ブロック番号(2)
	PACKETSIZE_SD_FILE_USER_DATA         = PACKETSIZE_CONSTANT + 1+32,      // データ番号(1)、ユーザーデータ(32)
	PACKETSIZE_SD_FILE_RESEND_REQ        = PACKETSIZE_CONSTANT + 32,        // 再送要求パケット情報(32)
	PACKETSIZE_SD_FILE_SEND_STOP_REQ     = PACKETSIZE_CONSTANT + 1,         // フラグ(1)
	PACKETSIZE_SD_FILE_SEND_STOP_NOTIFY  = PACKETSIZE_SD_FILE_SEND_STOP_REQ,// 結果(1)
	PACKETSIZE_LIFEMANAGEMENT_PARTIAL_RESET_REQ = PACKETSIZE_CONSTANT + 4,  // リセット対象パラメータ情報(4)
// 201506xx TCS.Y.Nakamura ADD_S [ファイル転送機能拡張対応]
	PACKETSIZE_SD_FILE_SEND_UPDATE_FILE_LIST_REQ = PACKETSIZE_CONSTANT + 11,      // ディレクトリ名
	PACKETSIZE_SD_FILE_SEND_UPDATE_FILE_LIST_RES = PACKETSIZE_CONSTANT + 1 + 2,   // 結果(1)、ファイル数(2)
	PACKETSIZE_SD_FILE_LIST_DATA         = PACKETSIZE_CONSTANT + 1 + 2 + 4 + 20,  // モード(1)、データ番号(2)、ファイルサイズ(4)、ファイル(フォルダ)情報(20)
// 201506xx TCS.Y.Nakamura ADD_E
	PACKETSIZE_WAYPOINTDATA2	= PACKETSIZE_CONSTANT + 18,
	PACKETSIZE_GENELALPURPOSEDATA = PACKETSIZE_CONSTANT + 17,
	PACKETSIZE_DEBUGDATA_H       = PACKETSIZE_CONSTANT + 16,
	PACKETSIZE_DEBUGDATA_L       = PACKETSIZE_CONSTANT + 16,
};

// コマンドID
enum COMMAND
{
	COMMAND_ERROR                  = 0x0000, // UAV ⇔ PC  コマンドに対するエラー
	COMMAND_SLEEP                  = 0x0001, // UAV → GCS 送信休止の通知
	COMMAND_REQUEST_TIME           = 0x0002, // UAV → GCS 時間データの要求
	COMMAND_REQUEST_FIRMWAREINFO   = 0x0003, // UAV ← GCS ファームウェア情報の要求
	COMMAND_GO_HOME                = 0x0004, // UAV ← GCS 帰還要求
	COMMAND_TAKEOFF                = 0x0005, // UAV ← GCS 離陸要求
	COMMAND_LAND                   = 0x0006, // UAV ← GCS 着陸要求
	COMMAND_PAUSE                  = 0x0007, // UAV ← GCS ウェイポイント間移動一時停止要求
	COMMAND_RESUME                 = 0x0008, // UAV ← GCS ウェイポイント間移動再開要求
	COMMAND_CHANGE_SENDTERMLENGTH  = 0x000B, // UAV ← GCS 送信時間変更要求
	COMMAND_CALIBRATION_START      = 0x000C, // UAV ← GCS キャリブレーション開始要求
	COMMAND_CALIBRATION_STOP       = 0x000D, // UAV ← GCS キャリブレーション停止要求
	COMMAND_CALIBRATION_RESTART    = 0x000E, // UAV ← GCS キャリブレーションやり直し要求
	COMMAND_CALIBRATION_INDICATION = 0x000F, // UAV → GCS ユーザー操作指示
	COMMAND_EXIT_PLANNEDFLIGHT     = 0x0010, // UAV ← GCS 計画飛行終了要求
	COMMAND_WAYPOINT_REPLY         = 0x0011, // UAV → GCS ウェイポイントパケット受信応答
	COMMAND_BOOTLOADER_FWUP_START  = 0x8001, // UAV → GCS FW更新開始
	COMMAND_BOOTLOADER_FWUP_END    = 0x8002, // UAV → GCS FW更新終了
	COMMAND_BOOTLOADER_FAIL        = 0x8003, // UAV → GCS BOOT起動時のエラー通知
	COMMAND_PING                   = 0xFFFF, // UAV ← GCS 返答要求
};

#endif