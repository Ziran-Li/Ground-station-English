<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Window Brushes -->
    <!--
    #FF1F1A50 31,26,80
    赤：#FFB03D4F 176,61,79
    青#FF564FB8 86,79,184
    紫#FF963FAA 150,63,170
    緑#FF489708 72,151,8
    Resources["WindowBackgroundBrush"] = new SolidColorBrush(Color.FromRgb(0, 0, 255));
    -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF1F1A50"/>

    <SolidColorBrush x:Key="CanvasBackgroundBrush" Color="#FF1F1A50" Opacity="0.7"/>

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardIsChecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsCheckedOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="ForegroundPanel" BorderThickness="1" Width="35" Height="20" CornerRadius="10">
                                <Canvas>
                                    <Border Background="White" x:Name="CheckFlag" CornerRadius="10" VerticalAlignment="Center" BorderThickness="1" Width="19" Height="18" RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="180" />
                                        </Border.Effect>
                                    </Border>
                                </Canvas>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="Gray" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="TabControl.HeaderBackGround" Color="#353535" />
    <SolidColorBrush x:Key="TabControl.ActivedItemHeaderBackground" Color="#FF10a8ab" />
    <SolidColorBrush x:Key="TabControl.BodyBackground" Color="#353535" />
    <SolidColorBrush x:Key="TabControl.BorderBrush" Color="Gray" />
    <SolidColorBrush x:Key="TabItem.Foreground" Color="#FF9BEDF3" />

    <Style x:Key="TabControlStyle2" TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Border Background="{DynamicResource TabControl.BodyBackground}" BorderThickness="1" BorderBrush="{DynamicResource TabControl.BorderBrush}" Margin="-1">
                            <Border.Effect>
                                <BlurEffect />
                            </Border.Effect>
                        </Border>

                        <Border BorderBrush="{DynamicResource TabControl.BorderBrush}" BorderThickness="1" ClipToBounds="True" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Name="ROW0" Height="30"/>
                                    <RowDefinition Name="ROW1" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="COL0" />
                                    <ColumnDefinition Name="COL1" />
                                </Grid.ColumnDefinitions>

                                <Border Background="{DynamicResource TabControl.HeaderBackGround}" Name="Mask" />

                                <Border Grid.Row="0" Grid.Column="0" Padding="10,6" Name="TP">
                                    <TabPanel IsItemsHost="True">
                                        <TabPanel.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=Mask}" />
                                        </TabPanel.OpacityMask>
                                    </TabPanel>
                                </Border>

                                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="TC">
                                    <Border Name="EB" Margin="-1" BorderThickness="0,0,0,0" BorderBrush="{DynamicResource TabControl.BorderBrush}">
                                        <Border.Effect>
                                            <BlurEffect Radius="5" />
                                        </Border.Effect>
                                    </Border>
                                    <Border>
                                        <ContentPresenter x:Name="PART_SelectedContentHost" Width="Auto"
                                                          ContentSource="SelectedContent" Margin="10"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="ROW0" Property="Height" Value="auto" />

                            <Setter TargetName="Mask" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.ColumnSpan" Value="2" />
                            <!--<Setter TargetName="Mask" Property="CornerRadius" Value="10,10,0,0" />-->

                            <Setter TargetName="TP" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TP" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TP" Property="Grid.ColumnSpan" Value="2" />

                            <Setter TargetName="TC" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TC" Property="Grid.Row" Value="1" />
                            <Setter TargetName="TC" Property="Grid.ColumnSpan" Value="2" />

                            <Setter TargetName="EB" Property="BorderThickness" Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ROW1" Property="Height" Value="auto" />

                            <Setter TargetName="Mask" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Mask" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Mask" Property="CornerRadius" Value="0,0,10,10" />

                            <Setter TargetName="TP" Property="Grid.Row" Value="1" />
                            <Setter TargetName="TP" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TP" Property="Grid.ColumnSpan" Value="2" />

                            <Setter TargetName="TC" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TC" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TC" Property="Grid.ColumnSpan" Value="2" />

                            <Setter TargetName="EB" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="COL0" Property="Width" Value="auto" />

                            <Setter TargetName="Mask" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="Mask" Property="CornerRadius" Value="10,0,0,10" />

                            <Setter TargetName="TP" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TP" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TP" Property="Grid.RowSpan" Value="2" />

                            <Setter TargetName="TC" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TC" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TC" Property="Grid.RowSpan" Value="2" />

                            <Setter TargetName="EB" Property="BorderThickness" Value="1,0,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="COL1" Property="Width" Value="auto" />

                            <Setter TargetName="Mask" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Mask" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="Mask" Property="CornerRadius" Value="0,10,10,0" />

                            <Setter TargetName="TP" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TP" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TP" Property="Grid.RowSpan" Value="2" />

                            <Setter TargetName="TC" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TC" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TC" Property="Grid.RowSpan" Value="2" />

                            <Setter TargetName="EB" Property="BorderThickness" Value="0,0,1,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabItemStyle2" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource TabItem.Foreground}" />
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="TextBlock.FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="bbb" SnapsToDevicePixels="True" ClipToBounds="True" CornerRadius="15" >
                        <ContentPresenter x:Name="contentPresenter" 
                                              ContentSource="Header"
                                              Focusable="False" 
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">

                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bbb" Property="Background" Value="{DynamicResource TabControl.ActivedItemHeaderBackground}" />
                            <Setter TargetName="bbb" Property="Padding" Value="3" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>